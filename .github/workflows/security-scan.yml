name: 🔒 Security Scanning

on:
  schedule:
    # Run daily at 1 AM UTC
    - cron: '0 1 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  secret-detection:
    name: 🔐 Secret Detection
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Minimal history for comparison
      
      - name: Run basic secret detection
        run: |
          echo "Checking for exposed secrets..."
          # Basic regex patterns for common secrets
          if grep -r -E "(api[_-]?key|apikey|api_secret|secret[_-]?key|password|passwd|pwd|token|auth|credential)" \
               --include="*.js" --include="*.json" --include="*.env" \
               --exclude-dir=node_modules --exclude-dir=.git . 2>/dev/null | \
               grep -E "=\s*['\"][^'\"]{20,}['\"]" ; then
            echo "⚠️ Potential secrets detected. Please review."
          else
            echo "✅ No obvious secrets detected"
          fi

  dependency-check:
    name: 🔍 Dependency Security Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for package.json
        id: check_package
        run: |
          if [ -f package.json ]; then
            echo "has_package=true" >> $GITHUB_OUTPUT
          else
            echo "has_package=false" >> $GITHUB_OUTPUT
            echo "No package.json found - skipping dependency checks"
          fi
      
      - name: Set up Node.js
        if: steps.check_package.outputs.has_package == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run npm audit
        if: steps.check_package.outputs.has_package == 'true'
        run: |
          echo "Running security audit..."
          npm audit --audit-level=high 2>&1 || echo "Audit completed with findings"
      
      - name: Create audit report
        if: steps.check_package.outputs.has_package == 'true'
        run: |
          echo "## 📦 Dependency Audit Results" > audit-report.md
          echo "" >> audit-report.md
          npm audit 2>&1 | head -50 >> audit-report.md || echo "No critical issues found" >> audit-report.md
      
      - name: Upload audit report
        if: steps.check_package.outputs.has_package == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit-report
          path: audit-report.md
          retention-days: 30

  code-quality:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for common security issues
        run: |
          echo "## 🔍 Code Security Check" > security-check.md
          echo "" >> security-check.md
          
          # Check for hardcoded URLs
          echo "### Checking for hardcoded sensitive URLs..." >> security-check.md
          if grep -r "localhost\|127\.0\.0\.1" --include="*.js" --exclude-dir=node_modules . 2>/dev/null | head -5; then
            echo "⚠️ Found localhost references (may need to be environment variables)" >> security-check.md
          else
            echo "✅ No localhost references found" >> security-check.md
          fi
          
          # Check for console.log in production code
          echo "" >> security-check.md
          echo "### Checking for console.log statements..." >> security-check.md
          COUNT=$(grep -r "console\.log" --include="*.js" --exclude-dir=node_modules . 2>/dev/null | wc -l)
          echo "Found $COUNT console.log statements" >> security-check.md
          
          # Check for eval usage
          echo "" >> security-check.md
          echo "### Checking for eval() usage..." >> security-check.md
          if grep -r "eval(" --include="*.js" --exclude-dir=node_modules . 2>/dev/null; then
            echo "⚠️ Found eval() usage - potential security risk" >> security-check.md
          else
            echo "✅ No eval() usage found" >> security-check.md
          fi
      
      - name: Upload security check report
        uses: actions/upload-artifact@v4
        with:
          name: code-security-report
          path: security-check.md
          retention-days: 30

  security-summary:
    name: 📊 Security Summary
    needs: [secret-detection, dependency-check, code-quality]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Security Scan Summary
        run: |
          echo "## 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Detection | ${{ needs.secret-detection.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY  
          echo "| Code Quality | ${{ needs.code-quality.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Security scanning completed for Forward Horizon" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Note: All jobs use continue-on-error to prevent workflow failures" >> $GITHUB_STEP_SUMMARY